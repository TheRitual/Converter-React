{"version":3,"sources":["Converter/styled.js","Converter/Clock/styled.js","Converter/Clock/index.js","Converter/Clock/useDate.js","Converter/index.js","Converter/useConverterFunctions.js","Header/styled.js","Header/index.js","List/styled.js","List/index.js","utils/useConverterStates.js","utils/useLocalStorageState.js","styled.js","App.js","utils/useFetchData.js","reportWebVitals.js","index.js"],"names":["StyledConverter","styled","section","hidden","css","ConverterHeader","h2","ConverterSelect","select","ConverterField","input","ConverterButton","button","ConverterCode","label","ConverterSection","ClockInformation","div","ClockBar","progress","Clock","time","useState","Date","toISOString","setTime","useEffect","intervalId","setInterval","clearInterval","useDate","className","toLocaleString","undefined","month","weekday","day","year","hour","minute","second","value","getMilliseconds","getSeconds","max","Converter","states","getBid","setRate","currency","setValueCUR","Number","valuePLN","rate","toFixed","onChangeCurrency","event","setCurrency","target","onValuePLNChange","setValuePLN","onValueCURChange","save","preventDefault","setSavedList","valPLN","valCUR","valueCUR","id","savedList","length","code","date","useConverterFunctions","onSubmit","htmlFor","onChange","currencyList","map","index","type","step","toString","min","autoFocus","StyledHeader","h1","Header","StyledList","ListHeader","SavedList","ul","SavedPosition","li","ListCode","span","ListValue","RemoveButton","ClearButton","List","onClick","record","title","filter","useConverterStates","keyName","initialValue","localStorageState","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","useLocalStorageState","bid","ask","setCurrencyList","Box","App","dataReceived","setDataReceived","fetchData","useCallback","a","console","log","fetch","response","json","jsonData","rates","useFetchData","cur","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c801b0f3.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledConverter = styled.section`\r\n    flex-basis: 400px;\r\n    margin: 30px;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: #005857;\r\n    background-color: #FFF;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    box-shadow: 0 0 10px 10px #00000099;\r\n    ${({ hidden }) => hidden && css`display: none;`}\r\n`;\r\n\r\nexport const ConverterHeader = styled.h2`\r\n    padding: 0px;\r\n`;\r\n\r\nexport const ConverterSelect = styled.select`\r\n    font-family: 'Dela Gothic One', cursive;\r\n    width: 150px;\r\n    text-align: center;\r\n    border: #000 solid 2px;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    background-color: #FFF;\r\n    color: #005857;\r\n    &:active {\r\n       background-color: #005857;\r\n        color: #FFF;\r\n    }\r\n    &:focus {\r\n        background-color: #005857;\r\n        color: #FFF;\r\n    }\r\n`;\r\n\r\nexport const ConverterField = styled.input`\r\n    font-family: 'Dela Gothic One', cursive;\r\n    width: 250px;\r\n    text-align: center;\r\n    border: #000 solid 2px;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    background-color: #FFF;\r\n    color: #005857;\r\n    &:active {\r\n       background-color: #ebebeb;\r\n    }\r\n    &:focus {\r\n        background-color: #def0ef;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nexport const ConverterButton = styled.button`\r\n    display: block;\r\n    font-size: 20px;\r\n    margin: 15px auto;\r\n    border: 2px solid;\r\n    border-radius: 10px;\r\n    padding: 7px;\r\n    color: #005857;\r\n    background-color: hsl(179, 100%, 98%);\r\n    transition: 0.3s;\r\n    &:hover {\r\n        background-color: hsl(179, 100%, 20%);\r\n        color: #FFF;\r\n        transform: scale(1.2);\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const ConverterCode = styled.label`\r\n    color: #FFF;\r\n    background-color: #005857;\r\n    font-size: 18px;\r\n    padding: 7px;\r\n    border-radius: 10px;\r\n    margin-left: 10px;\r\n`;\r\n\r\nexport const ConverterSection = styled.section`\r\n    margin: 20px 0;\r\n    padding: 0px;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const ClockInformation = styled.div`\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n`;\r\n\r\nexport const ClockBar = styled.progress`\r\n\theight: 4px;\r\n    border: 0px;\r\n\t&[value]::-webkit-progress-value {\r\n\t\tbackground-color: teal;\r\n\t\tbackground-image:\r\n\t\t-webkit-linear-gradient(-45deg, \r\n\t\t\t\t\t\t\t\ttransparent 33%, rgba(0, 0, 0, .1) 33%, \r\n\t\t\t\t\t\t\t\trgba(0,0, 0, .1) 66%, transparent 66%),\r\n\t\t-webkit-linear-gradient(top, \r\n\t\t\t\t\t\t\t\trgba(255, 255, 255, .25), \r\n\t\t\t\t\t\t\t\trgba(0, 0, 0, .25)),\r\n\t\t-webkit-linear-gradient(left, #09c, #005857);\r\n\t}\r\n\t&[value]::-webkit-progress-bar {\r\n\t\tbackground-color: transparent;\r\n\t\tborder-radius: 2px;\r\n  \t}\r\n`;","import { useDate } from \"./useDate\";\r\nimport { ClockBar, ClockInformation } from \"./styled\";\r\n\r\nconst Clock = () => {\r\n    const time = useDate();\r\n    return (\r\n        <section className=\"clock\">\r\n            <ClockInformation>\r\n                {new Date(time).toLocaleString(undefined, {\r\n                    month: \"long\",\r\n                    weekday: \"long\",\r\n                    day: \"numeric\",\r\n                    year: \"numeric\",\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\",\r\n                    second: \"numeric\",\r\n                })}\r\n            </ClockInformation>\r\n            <ClockBar value={new Date(time).getMilliseconds() + new Date(time).getSeconds() * 1000} max=\"60000\"/>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useDate = () => {\r\n    const [time, setTime] = useState(new Date().toISOString());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(new Date().toISOString());\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return time;\r\n}","import { ConverterButton, ConverterCode, ConverterField, ConverterHeader, ConverterSection, ConverterSelect, StyledConverter } from \"./styled\";\r\nimport Clock from \"./Clock\"\r\nimport { useConverterFunctions } from \"./useConverterFunctions\";\r\n\r\nconst Converter = ({ states, getBid }) => {\r\n\r\n    const { onChangeCurrency, onValuePLNChange, onValueCURChange, save } = useConverterFunctions(states, getBid);\r\n\r\n    return (\r\n        <StyledConverter>\r\n            <ConverterHeader>Converter</ConverterHeader>\r\n            <Clock />\r\n            <form onSubmit={save}>\r\n                <ConverterSection>\r\n                    <label htmlFor=\"currencyList\">Currency: </label>\r\n                    <ConverterSelect onChange={onChangeCurrency} id=\"currencyList\">\r\n                        {\r\n                            states.currencyList.map((currency, index) => {\r\n                                return (<option key={index} value={currency.code}>{currency.code}</option>);\r\n                            })\r\n                        }\r\n                    </ConverterSelect>\r\n                </ConverterSection>\r\n                \r\n                <ConverterSection>\r\n                    <ConverterField type=\"number\" step=\"any\" value={Number(states.valuePLN).toString()} onChange={onValuePLNChange} min=\"0\" id=\"valuePLN\" autoFocus />\r\n                    <ConverterCode htmlFor=\"valuePLN\">PLN</ConverterCode>\r\n                </ConverterSection>\r\n\r\n                <ConverterSection>\r\n                    <ConverterField type=\"number\" step=\"any\" value={Number(states.valueCUR).toString()} onChange={onValueCURChange} min=\"0\" id=\"currencyField\" />\r\n                    <ConverterCode htmlFor=\"currencyField\">{states.currency}</ConverterCode>\r\n                </ConverterSection>\r\n                \r\n                <ConverterSection>\r\n                    {states.currency} rate: {states.rate}\r\n                    <ConverterButton>Save</ConverterButton>\r\n                </ConverterSection>\r\n            </form>\r\n        </StyledConverter>);\r\n};\r\n\r\nexport default Converter;","import { useEffect } from \"react\";\r\n\r\nexport const useConverterFunctions = (states, getBid) => {\r\n    const onChangeCurrency = (event) => {\r\n        states.setCurrency(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        states.setRate(getBid(states.currency));\r\n        states.setValueCUR(Number(states.valuePLN / states.rate).toFixed(2));\r\n        // eslint-disable-next-line\r\n    }, [states.currency, states.rate]);\r\n\r\n    const onValuePLNChange = (event) => {\r\n        states.setValueCUR(Number(event.target.value / states.rate).toFixed(2));\r\n        states.setValuePLN(Number(event.target.value));\r\n    }\r\n\r\n    const onValueCURChange = (event) => {\r\n        states.setValueCUR(Number(event.target.value));\r\n        states.setValuePLN(Number(event.target.value * states.rate).toFixed(2));\r\n    }\r\n\r\n    const save = (event) => {\r\n        event.preventDefault();\r\n\r\n        states.setSavedList(\r\n            [{\r\n                valPLN: Number(states.valuePLN).toFixed(2),\r\n                valCUR: Number(states.valueCUR).toFixed(2),\r\n                id: states.savedList.length ? states.savedList[0].id + 1 : 0,\r\n                code: states.currency,\r\n                rate: states.rate,\r\n                date: new Date().toISOString(),\r\n            }, ...states.savedList]\r\n        );\r\n    }\r\n\r\n    return { onChangeCurrency, onValuePLNChange, onValueCURChange, save };\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    text-align: center;\r\n    color: #FFF;\r\n    text-shadow: 0 0 10px #000;\r\n`;","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <StyledHeader>Currency Exchange</StyledHeader>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledList = styled.section`\r\n    max-width: 98%;\r\n    flex-basis: 350px;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    color: #005857;\r\n    background-color: #FFF;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    box-shadow: 0 0 10px 10px #00000099;\r\n    margin-top: 30px;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nexport const ListHeader = styled.h2`\r\n    padding: 0 0 10px 0;\r\n    font-size: 30px;\r\n`;\r\n\r\nexport const SavedList = styled.ul`\r\n    list-style-type: none;\r\n    margin: auto;\r\n    padding: 0px;\r\n    overflow-y: auto;\r\n    max-height: 600px;\r\n`;\r\n\r\nexport const SavedPosition = styled.li`\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    justify-content: center;\r\n    align-items: baseline;\r\n    color: #000;\r\n    border-bottom: 1px #CCC solid;\r\n    border-top: 1px #AAA solid;\r\n    padding: 7px;\r\n    margin: auto;\r\n    line-height: 2.3;\r\n    &:hover {\r\n        background-color: #def0ef;\r\n    }\r\n`;\r\n\r\nexport const ListCode = styled.span`\r\n    color: #FFF;\r\n    background-color: #005857;\r\n    font-size: 12px;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const ListValue = styled.span`\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-weight: 700;\r\n    font-size: 17px;\r\n`;\r\n\r\nexport const RemoveButton = styled.button`\r\n    color: rgb(92, 35, 35);\r\n    background-color: rgba(92, 35, 35, 0.219);\r\n    font-size: 15px;\r\n    padding: 8px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    margin: 5px;\r\n    transition: 0.3s;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        cursor: pointer;\r\n        background-color: tomato;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nexport const ClearButton = styled.button`\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    color: rgb(92, 35, 35);\r\n    background-color: transparent;\r\n    font-size: 20px;\r\n    padding: 8px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    margin: 5px;\r\n    transition: 0.3s;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        cursor: pointer;\r\n        color: #000;\r\n    }\r\n`;","import { ClearButton, ListHeader, ListValue, SavedList, SavedPosition, StyledList, ListCode, RemoveButton} from \"./styled\";\r\n\r\nconst List = ({ savedList, setSavedList }) => {\r\n    const removeItem = (id) => {\r\n        setSavedList(savedList => savedList.filter(record => record.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setSavedList([]);\r\n    }\r\n\r\n    return (\r\n        <StyledList>\r\n            <ListHeader>Saved</ListHeader>\r\n            {savedList.length > 0 ? <ClearButton onClick={clearList} >Clear All</ClearButton> : \"\"}\r\n            <SavedList>\r\n                {savedList.map((record) => {\r\n                    return (\r\n                        <SavedPosition key={record.id} title={(Date(record.date) + \" rate: \" + record.rate)}>\r\n                            <div>\r\n                                <ListValue>{record.valPLN}</ListValue>&nbsp;\r\n                                <ListCode>PLN</ListCode>&nbsp;\r\n                            </div>\r\n                            <div>\r\n                                &nbsp;➤&nbsp;\r\n                            </div>\r\n                            <div>\r\n                                <ListValue>{record.valCUR}</ListValue>&nbsp;\r\n                                <ListCode>{record.code}</ListCode>&nbsp;\r\n                            </div>\r\n                            <div>\r\n                                <RemoveButton onClick={() => removeItem(record.id)} >&#10006;</RemoveButton>\r\n                            </div>\r\n                        </SavedPosition>\r\n                    );\r\n                })}\r\n            </SavedList>\r\n        </StyledList>);\r\n};\r\n\r\nexport default List;","import { useState } from \"react\";\r\nimport { useLocalStorageState } from \"./useLocalStorageState\";\r\n\r\nexport const useConverterStates = () => {\r\n  const [savedList, setSavedList] = useLocalStorageState(\"savedList\", []);\r\n  const [currencyList, setCurrencyList] = useState([{ currency: \"LOADING\", code: \"USD\", bid: 6.66, ask: 6.66 }]);\r\n  const [rate, setRate] = useState(3.8551);\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [valuePLN, setValuePLN] = useState(1.00);\r\n  const [valueCUR, setValueCUR] = useState(1.00);\r\n  const states = { currencyList, setCurrencyList, rate, setRate, currency, setCurrency, valuePLN, setValuePLN, valueCUR, setValueCUR, savedList, setSavedList };\r\n  return states;\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorageState);\r\n    }\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n        // eslint-disable-next-line\r\n    }, [state]);\r\n    return [state, setState];\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Box = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n`;","import Converter from \"./Converter\";\r\nimport Header from \"./Header\";\r\nimport List from \"./List\";\r\nimport { useFetchData } from \"./utils/useFetchData\";\r\nimport { useConverterStates } from \"./utils/useConverterStates\"\r\nimport { Box } from \"./styled\";\r\n\r\nfunction App() {\r\n  const states = useConverterStates();\r\n  useFetchData(states);\r\n  const getBid = (currency = \"USD\") => states.currencyList.filter(cur => cur.code === currency)[0].bid;\r\n\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <Box>\r\n        <Converter states={states} getBid={getBid}/>\r\n        <List savedList={states.savedList} setSavedList={states.setSavedList} />\r\n      </Box>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nexport const useFetchData = (states) => {\r\n    const [dataReceived, setDataReceived] = useState(false);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        if (!dataReceived) {\r\n            console.log(\"Connecting to NBP\");\r\n            try {\r\n                const response = await fetch(\"https://api.nbp.pl/api/exchangerates/tables/C/?format=json\");\r\n                const jsonData = await response.json();\r\n                console.log(\"Response received\");\r\n                setDataReceived(true);\r\n                states.setCurrencyList(jsonData[0].rates);\r\n                states.setCurrency(jsonData[0].rates[0].code);\r\n                states.setRate(jsonData[0].rates[0].bid);\r\n                states.setValuePLN(Number(states.rate).toFixed(2));\r\n            } catch (error) {\r\n                console.log(\"Can't connect to NBP\");\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}