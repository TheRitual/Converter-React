{"version":3,"sources":["Converter/index.js","Header/index.js","List/index.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","data","className","onSubmit","event","preventDefault","console","log","setSavedList","savedList","valPLN","valuePLN","valCUR","valueCUR","rate","code","currency","htmlFor","onChange","setCurrency","target","value","setRate","getRate","setValueCUR","Number","toFixed","id","currencyList","map","index","type","step","setValuePLN","min","autoFocus","Header","List","record","App","useState","bid","ask","setCurrencyList","dataReceived","setDataReceived","dataObject","filter","cur","fetchData","useCallback","a","fetch","response","json","jsonData","rates","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11f9c64.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Converter = ({data}) => {\r\n    \r\n    const onChangeCurrency = (event) => {\r\n        data.setCurrency(event.target.value);\r\n        data.setRate(data.getRate(event.target.value));\r\n        data.setValueCUR(Number(data.valuePLN / data.getRate(event.target.value)).toFixed(2));\r\n    }\r\n\r\n    const onValuePLNChange = (event) => {\r\n        data.setValuePLN(Number(event.target.value));\r\n        data.setValueCUR(Number(event.target.value / data.rate).toFixed(2));\r\n    }\r\n\r\n    const onValueCURChange = (event) => {\r\n        data.setValueCUR(Number(event.target.value));\r\n        data.setValuePLN(Number(event.target.value * data.rate).toFixed(2));\r\n    }\r\n\r\n    const save = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"saving position\");\r\n        data.setSavedList(\r\n            [...data.savedList, {\r\n                valPLN : data.valuePLN,\r\n                valCUR : data.valueCUR,\r\n                rate : data.rate,\r\n                code : data.currency,\r\n            }]\r\n        );\r\n    }\r\n\r\n   \r\n        return (\r\n            <section className=\"converter\">\r\n                <h2 className=\"converter__header\">Converter</h2>\r\n                <form className=\"converter__form\" onSubmit={save}>\r\n                    <p>\r\n                        <label htmlFor=\"currencyField\">Currency: </label>\r\n                        <select onChange={onChangeCurrency} id=\"currencyList\" className=\"converter__select\">\r\n                            {\r\n                                data.currencyList.map((currency, index) => {\r\n                                    return (<option key={index} value={currency.code}>{currency.code}</option>);\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"number\" step=\"0.01\" value={data.valuePLN} onChange={onValuePLNChange} min=\"0\" id=\"valuePLN\" className=\"converter__field\" autoFocus />\r\n                        <label htmlFor=\"valuePLN\">PLN</label>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <input type=\"number\" step=\"0.01\" value={data.valueCUR} onChange={onValueCURChange} min=\"0\" id=\"currencyField\" className=\"converter__field\" />\r\n                        <label htmlFor=\"currencyField\">{data.currency}</label>\r\n                    </p>\r\n                    <p className=\"converter__paragraph\">\r\n                        {data.currency} rate: <span className=\"converter__rate\">{data.rate}</span>\r\n                        <button className=\"converter__button\">Save</button>\r\n                    </p>\r\n                </form>\r\n            </section>);\r\n};\r\n\r\nexport default Converter;","import \"./style.css\";\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__header\">Currency Exchange</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst List = ({savedList}) => {   \r\n        return (\r\n            <section className=\"list\">\r\n                <h2 className=\"list__header\">Saved</h2>\r\n                <ul className=\"list__savedList\">\r\n                    {savedList.map((record, index) => {\r\n                        return(\r\n                            <li key={index} className=\"list__savedPositions\">\r\n                                {record.valPLN}&nbsp;<span className=\"list__code\">PLN</span>&nbsp;âž¤&nbsp;\r\n                                {record.valCUR}&nbsp;<span className=\"list__code\">{record.code}</span>\r\n                            </li>\r\n                        );\r\n                    } )}\r\n                </ul>         \r\n            </section>);\r\n};\r\n\r\nexport default List;","import { useState, useEffect, useCallback } from \"react\";\nimport Converter from \"./Converter\";\nimport Header from \"./Header\";\nimport List from \"./List\";\nimport \"./App.css\";\n\n\nfunction App() {\n\n  const [currencyList, setCurrencyList] = useState([{ currency: \"loading\", code: \"LOADING\", bid: 6.66, ask: 6.66 }]);\n  const [dataReceived, setDataReceived] = useState(false);\n  const [savedList, setSavedList] = useState([]);\n  const [rate, setRate] = useState(3.8551);\n  const [currency, setCurrency] = useState(\"LOADING\");\n  const [valuePLN, setValuePLN] = useState(1.00);\n  const [valueCUR, setValueCUR] = useState(1.00);\n\n  const getRate = (currency = \"USD\") => currencyList.filter(cur => cur.code === currency)[0].bid;\n\n  const dataObject = { currency, setCurrency, valuePLN, setValuePLN, valueCUR, setValueCUR, rate, setRate, currencyList, setCurrencyList, getRate, savedList, setSavedList };\n\n  const fetchData = useCallback(async () => {\n    if (!dataReceived) {\n      console.log(\"Connecting to NBP\");\n      try {\n        const response = await fetch(\"https://api.nbp.pl/api/exchangerates/tables/C/?format=json\");\n        const jsonData = await response.json();\n        console.log(\"Response received\");\n        setDataReceived(true);\n        setCurrencyList(jsonData[0].rates);\n        setCurrency(jsonData[0].rates[0].code);\n        setRate(jsonData[0].rates[0].bid);\n        setValuePLN(Number(rate).toFixed(2));\n      } catch (error) {\n        console.log(\"Can't connect to NBP\");\n        console.log(error);\n      }\n    } else {\n      return null;\n    }\n  }\n    , [rate, dataReceived]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <main>\n      <Header />\n      <div className=\"box\">\n        <Converter data={dataObject} />\n        <List savedList={savedList} />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}