{"version":3,"sources":["Converter/Clock/index.js","Converter/Clock/useDate.js","Converter/index.js","Converter/useConverterFunctions.js","Header/index.js","List/index.js","utils/useConverterStates.js","utils/useLocalStorageState.js","App.js","utils/useFetchData.js","reportWebVitals.js","index.js"],"names":["Clock","time","useState","Date","toISOString","setTime","useEffect","intervalId","setInterval","clearInterval","useDate","className","toLocaleString","undefined","month","weekday","day","year","hour","minute","second","value","getMilliseconds","getSeconds","max","Converter","states","getBid","setRate","currency","setValueCUR","Number","valuePLN","rate","toFixed","onChangeCurrency","event","setCurrency","target","onValuePLNChange","setValuePLN","onValueCURChange","save","preventDefault","setSavedList","valPLN","valCUR","valueCUR","id","savedList","length","code","date","useConverterFunctions","onSubmit","htmlFor","onChange","currencyList","map","index","type","step","toString","min","autoFocus","Header","List","onClick","record","title","filter","useConverterStates","keyName","initialValue","localStorageState","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","useLocalStorageState","bid","ask","setCurrencyList","App","dataReceived","setDataReceived","fetchData","useCallback","a","console","log","fetch","response","json","jsonData","rates","useFetchData","cur","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAuBeA,EApBD,WACV,IAAMC,ECFa,WACnB,MAAwBC,oBAAS,IAAIC,MAAOC,eAA5C,mBAAOH,EAAP,KAAaI,EAAb,KAWA,OATAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BH,GAAQ,IAAIF,MAAOC,iBACpB,KACH,OAAO,WACHK,cAAcF,MAEnB,IAEIN,EDVMS,GACb,OACI,0BAASC,UAAU,QAAnB,UACI,qBAAKA,UAAU,qBAAf,SACK,IAAIR,KAAKF,GAAMW,oBAAeC,EAAW,CACtCC,MAAO,OACPC,QAAS,OACTC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,cAGhB,0BAAUC,MAAO,IAAIlB,KAAKF,GAAMqB,kBAAkD,IAA9B,IAAInB,KAAKF,GAAMsB,aAAqBC,IAAI,QAAQb,UAAU,mB,OEwB3Gc,EAtCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAEjB,ECJiC,SAACA,EAAQC,GAoC1C,OA/BArB,qBAAU,WACNoB,EAAOE,QAAQD,EAAOD,EAAOG,WAC7BH,EAAOI,YAAYC,OAAOL,EAAOM,SAAWN,EAAOO,MAAMC,QAAQ,MAElE,CAACR,EAAOG,SAAUH,EAAOO,OA2BrB,CAAEE,iBAnCgB,SAACC,GACtBV,EAAOW,YAAYD,EAAME,OAAOjB,QAkCTkB,iBAzBF,SAACH,GACtBV,EAAOI,YAAYC,OAAOK,EAAME,OAAOjB,MAAQK,EAAOO,MAAMC,QAAQ,IACpER,EAAOc,YAAYT,OAAOK,EAAME,OAAOjB,SAuBEoB,iBApBpB,SAACL,GACtBV,EAAOI,YAAYC,OAAOK,EAAME,OAAOjB,QACvCK,EAAOc,YAAYT,OAAOK,EAAME,OAAOjB,MAAQK,EAAOO,MAAMC,QAAQ,KAkBTQ,KAflD,SAACN,GACVA,EAAMO,iBAENjB,EAAOkB,aAAP,CACK,CACGC,OAAQd,OAAOL,EAAOM,UAAUE,QAAQ,GACxCY,OAAQf,OAAOL,EAAOqB,UAAUb,QAAQ,GACxCc,GAAItB,EAAOuB,UAAUC,OAASxB,EAAOuB,UAAU,GAAGD,GAAK,EAAI,EAC3DG,KAAMzB,EAAOG,SACbI,KAAMP,EAAOO,KACbmB,MAAM,IAAIjD,MAAOC,gBAPzB,mBAQUsB,EAAOuB,eD5BkDI,CAAsB3B,EAFvD,EAAbC,QAEjBQ,EAAR,EAAQA,iBAAkBI,EAA1B,EAA0BA,iBAAkBE,EAA5C,EAA4CA,iBAAkBC,EAA9D,EAA8DA,KAE9D,OACI,0BAAS/B,UAAU,YAAnB,UACI,oBAAIA,UAAU,oBAAd,uBACA,cAAC,EAAD,IAGA,uBAAMA,UAAU,kBAAkB2C,SAAUZ,EAA5C,UACI,8BACI,uBAAOa,QAAQ,gBAAf,wBACA,wBAAQC,SAAUrB,EAAkBa,GAAG,eAAerC,UAAU,oBAAhE,SAEQe,EAAO+B,aAAaC,KAAI,SAAC7B,EAAU8B,GAC/B,OAAQ,wBAAoBtC,MAAOQ,EAASsB,KAApC,SAA2CtB,EAASsB,MAAvCQ,WAKrC,8BACI,uBAAOC,KAAK,SAASC,KAAK,MAAMxC,MAAOU,OAAOL,EAAOM,UAAU8B,WAAYN,SAAUjB,EAAkBwB,IAAI,IAAIf,GAAG,WAAWrC,UAAU,mBAAmBqD,WAAS,IACnK,uBAAOT,QAAQ,WAAW5C,UAAU,kBAApC,oBAGJ,8BACI,uBAAOiD,KAAK,SAASC,KAAK,MAAMxC,MAAOU,OAAOL,EAAOqB,UAAUe,WAAYN,SAAUf,EAAkBsB,IAAI,IAAIf,GAAG,gBAAgBrC,UAAU,qBAC5I,uBAAO4C,QAAQ,gBAAgB5C,UAAU,kBAAzC,SAA4De,EAAOG,cAEvE,oBAAGlB,UAAU,uBAAb,UACKe,EAAOG,SADZ,UAC4B,sBAAMlB,UAAU,kBAAhB,SAAmCe,EAAOO,OAClE,wBAAQtB,UAAU,oBAAlB,4BE5BLsD,G,MANA,kBACX,wBAAQtD,UAAU,SAAlB,SACI,oBAAIA,UAAU,iBAAd,mCCoCOuD,G,MAtCF,SAAC,GAAiC,IAA/BjB,EAA8B,EAA9BA,UAAWL,EAAmB,EAAnBA,aASvB,OACI,0BAASjC,UAAU,OAAnB,UACI,oBAAIA,UAAU,eAAd,mBACCsC,EAAUC,OAAS,EAAI,wBAAQvC,UAAU,wBAAwBwD,QAPxD,WACdvB,EAAa,KAMe,uBAAoF,GAC5G,oBAAIjC,UAAU,kBAAd,SACKsC,EAAUS,KAAI,SAACU,GACZ,OACI,qBAAoBzD,UAAU,uBAAuB0D,MAAQlE,KAAKiE,EAAOhB,MAAQ,UAAYgB,EAAOnC,KAApG,UACI,sBAAKtB,UAAU,uBAAf,UACI,sBAAMA,UAAU,cAAhB,SAA+ByD,EAAOvB,SAD1C,OAEI,sBAAMlC,UAAU,aAAhB,iBAFJ,UAIA,qBAAKA,UAAU,uBAAf,4BAGA,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,cAAhB,SAA+ByD,EAAOtB,SAD1C,OAEI,sBAAMnC,UAAU,aAAhB,SAA8ByD,EAAOjB,OAFzC,UAIA,qBAAKxC,UAAU,uBAAf,SACI,wBAAQA,UAAU,qBAAqBwD,QAAS,kBA5BxDnB,EA4ByEoB,EAAOpB,QA3BhGJ,GAAa,SAAAK,GAAS,OAAIA,EAAUqB,QAAO,SAAAF,GAAM,OAAIA,EAAOpB,KAAOA,QADpD,IAACA,GA4BQ,wBAbCoB,EAAOpB,c,+BCf3BuB,EAAqB,WAChC,MCFkC,SAACC,EAASC,GAC1C,IAQA,EAA0BvE,oBARF,WACpB,IAAMwE,EAAoBC,aAAaC,QAAQJ,GAC/C,OAA0B,OAAtBE,EACOD,EAEJI,KAAKC,MAAMJ,MAGtB,mBAAOK,EAAP,KAAcC,EAAd,KAMA,OAJA1E,qBAAU,WACNqE,aAAaM,QAAQT,EAASK,KAAKK,UAAUH,MAE9C,CAACA,IACG,CAACA,EAAOC,GDbiBG,CAAqB,YAAa,IAApE,mBAAOlC,EAAP,KAAkBL,EAAlB,KACA,EAAwC1C,mBAAS,CAAC,CAAE2B,SAAU,UAAWsB,KAAM,MAAOiC,IAAK,KAAMC,IAAK,QAAtG,mBAAO5B,EAAP,KAAqB6B,EAArB,KACA,EAAwBpF,mBAAS,QAAjC,mBAAO+B,EAAP,KAAaL,EAAb,KACA,EAAgC1B,mBAAS,OAAzC,mBAAO2B,EAAP,KAAiBQ,EAAjB,KACA,EAAgCnC,mBAAS,GAAzC,mBAAO8B,EAAP,KAAiBQ,EAAjB,KACA,EAAgCtC,mBAAS,GAAzC,mBAEA,MADe,CAAEuD,eAAc6B,kBAAiBrD,OAAML,UAASC,WAAUQ,cAAaL,WAAUQ,cAAaO,SAD7G,KACuHjB,YADvH,KACoImB,YAAWL,iBEgBlI2C,MAnBf,WACE,IAAM7D,EAAS6C,IAIf,OCV0B,SAAC7C,GACzB,MAAwCxB,oBAAS,GAAjD,mBAAOsF,EAAP,KAAqBC,EAArB,KAEMC,EAAYC,sBAAW,sBAAC,8BAAAC,EAAA,yDACrBJ,EADqB,wBAEtBK,QAAQC,IAAI,qBAFU,kBAIKC,MAAM,8DAJX,cAIZC,EAJY,gBAKKA,EAASC,OALd,OAKZC,EALY,OAMlBL,QAAQC,IAAI,qBACZL,GAAgB,GAChB/D,EAAO4D,gBAAgBY,EAAS,GAAGC,OACnCzE,EAAOW,YAAY6D,EAAS,GAAGC,MAAM,GAAGhD,MACxCzB,EAAOE,QAAQsE,EAAS,GAAGC,MAAM,GAAGf,KACpC1D,EAAOc,YAAYT,OAAOL,EAAOO,MAAMC,QAAQ,IAX7B,kDAalB2D,QAAQC,IAAI,wBACZD,QAAQC,IAAR,MAdkB,yDAiBf,MAjBe,0DAoB3B,IAEHxF,qBAAU,WACNoF,MAED,IDrBLU,CAAa1E,GAIX,iCACE,cAAC,EAAD,IACA,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CACEe,OAAQA,EACRC,OARO,eAACE,EAAD,uDAAY,MAAZ,OAAsBH,EAAO+B,aAAaa,QAAO,SAAA+B,GAAG,OAAIA,EAAIlD,OAAStB,KAAU,GAAGuD,OAU3F,cAAC,EAAD,CAAMnC,UAAWvB,EAAOuB,UAAWL,aAAclB,EAAOkB,sBERjD0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.893c1324.chunk.js","sourcesContent":["import \"./style.css\"\r\nimport { useDate } from \"./useDate\";\r\n\r\nconst Clock = () => {\r\n    const time = useDate();\r\n    return (\r\n        <section className=\"clock\">\r\n            <div className=\"clock__information\">\r\n                {new Date(time).toLocaleString(undefined, {\r\n                    month: \"long\",\r\n                    weekday: \"long\",\r\n                    day: \"numeric\",\r\n                    year: \"numeric\",\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\",\r\n                    second: \"numeric\",\r\n                })}\r\n            </div>\r\n            <progress value={new Date(time).getMilliseconds() + new Date(time).getSeconds() * 1000} max=\"60000\" className=\"clock__bar\" />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useDate = () => {\r\n    const [time, setTime] = useState(new Date().toISOString());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(new Date().toISOString());\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return time;\r\n}","import \"./style.css\";\r\nimport Clock from \"./Clock\"\r\nimport { useConverterFunctions } from \"./useConverterFunctions\";\r\n\r\nconst Converter = ({ states, getBid }) => {\r\n\r\n    const { onChangeCurrency, onValuePLNChange, onValueCURChange, save } = useConverterFunctions(states, getBid);\r\n\r\n    return (\r\n        <section className=\"converter\">\r\n            <h2 className=\"converter__header\">Converter</h2>\r\n            <Clock>\r\n\r\n            </Clock>\r\n            <form className=\"converter__form\" onSubmit={save}>\r\n                <p>\r\n                    <label htmlFor=\"currencyField\">Currency: </label>\r\n                    <select onChange={onChangeCurrency} id=\"currencyList\" className=\"converter__select\">\r\n                        {\r\n                            states.currencyList.map((currency, index) => {\r\n                                return (<option key={index} value={currency.code}>{currency.code}</option>);\r\n                            })\r\n                        }\r\n                    </select>\r\n                </p>\r\n                <p>\r\n                    <input type=\"number\" step=\"any\" value={Number(states.valuePLN).toString()} onChange={onValuePLNChange} min=\"0\" id=\"valuePLN\" className=\"converter__field\" autoFocus />\r\n                    <label htmlFor=\"valuePLN\" className=\"converter__code\">PLN</label>\r\n                </p>\r\n\r\n                <p>\r\n                    <input type=\"number\" step=\"any\" value={Number(states.valueCUR).toString()} onChange={onValueCURChange} min=\"0\" id=\"currencyField\" className=\"converter__field\" />\r\n                    <label htmlFor=\"currencyField\" className=\"converter__code\">{states.currency}</label>\r\n                </p>\r\n                <p className=\"converter__paragraph\">\r\n                    {states.currency} rate: <span className=\"converter__rate\">{states.rate}</span>\r\n                    <button className=\"converter__button\">Save</button>\r\n                </p>\r\n            </form>\r\n        </section>);\r\n};\r\n\r\nexport default Converter;","import { useEffect } from \"react\";\r\n\r\nexport const useConverterFunctions = (states, getBid) => {\r\n    const onChangeCurrency = (event) => {\r\n        states.setCurrency(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        states.setRate(getBid(states.currency));\r\n        states.setValueCUR(Number(states.valuePLN / states.rate).toFixed(2));\r\n        // eslint-disable-next-line\r\n    }, [states.currency, states.rate]);\r\n\r\n    const onValuePLNChange = (event) => {\r\n        states.setValueCUR(Number(event.target.value / states.rate).toFixed(2));\r\n        states.setValuePLN(Number(event.target.value));\r\n    }\r\n\r\n    const onValueCURChange = (event) => {\r\n        states.setValueCUR(Number(event.target.value));\r\n        states.setValuePLN(Number(event.target.value * states.rate).toFixed(2));\r\n    }\r\n\r\n    const save = (event) => {\r\n        event.preventDefault();\r\n\r\n        states.setSavedList(\r\n            [{\r\n                valPLN: Number(states.valuePLN).toFixed(2),\r\n                valCUR: Number(states.valueCUR).toFixed(2),\r\n                id: states.savedList.length ? states.savedList[0].id + 1 : 0,\r\n                code: states.currency,\r\n                rate: states.rate,\r\n                date: new Date().toISOString(),\r\n            }, ...states.savedList]\r\n        );\r\n    }\r\n\r\n    return { onChangeCurrency, onValuePLNChange, onValueCURChange, save };\r\n}","import \"./style.css\";\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__header\">Currency Exchange</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst List = ({ savedList, setSavedList }) => {\r\n    const removeItem = (id) => {\r\n        setSavedList(savedList => savedList.filter(record => record.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setSavedList([]);\r\n    }\r\n\r\n    return (\r\n        <section className=\"list\">\r\n            <h2 className=\"list__header\">Saved</h2>\r\n            {savedList.length > 0 ? <button className=\"list__clearListButton\" onClick={clearList} >Clear All</button> : \"\"}\r\n            <ul className=\"list__savedList\">\r\n                {savedList.map((record) => {\r\n                    return (\r\n                        <li key={record.id} className=\"list__savedPositions\" title={(Date(record.date) + \" rate: \" + record.rate)}>\r\n                            <div className=\"list_positionElement\">\r\n                                <span className=\"list__value\">{record.valPLN}</span>&nbsp;\r\n                                <span className=\"list__code\">PLN</span>&nbsp;\r\n                            </div>\r\n                            <div className=\"list_positionElement\">\r\n                                &nbsp;➤&nbsp;\r\n                            </div>\r\n                            <div className=\"list_positionElement\">\r\n                                <span className=\"list__value\">{record.valCUR}</span>&nbsp;\r\n                                <span className=\"list__code\">{record.code}</span>&nbsp;\r\n                            </div>\r\n                            <div className=\"list_positionElement\">\r\n                                <button className=\"list__removeButton\" onClick={() => removeItem(record.id)} >&#10006;</button>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </section>);\r\n};\r\n\r\nexport default List;","import { useState } from \"react\";\r\nimport { useLocalStorageState } from \"./useLocalStorageState\";\r\n\r\nexport const useConverterStates = () => {\r\n  const [savedList, setSavedList] = useLocalStorageState(\"savedList\", []);\r\n  const [currencyList, setCurrencyList] = useState([{ currency: \"LOADING\", code: \"USD\", bid: 6.66, ask: 6.66 }]);\r\n  const [rate, setRate] = useState(3.8551);\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [valuePLN, setValuePLN] = useState(1.00);\r\n  const [valueCUR, setValueCUR] = useState(1.00);\r\n  const states = { currencyList, setCurrencyList, rate, setRate, currency, setCurrency, valuePLN, setValuePLN, valueCUR, setValueCUR, savedList, setSavedList };\r\n  return states;\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorageState);\r\n    }\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n        // eslint-disable-next-line\r\n    }, [state]);\r\n    return [state, setState];\r\n}","import Converter from \"./Converter\";\r\nimport Header from \"./Header\";\r\nimport List from \"./List\";\r\nimport \"./App.css\";\r\nimport { useFetchData } from \"./utils/useFetchData\";\r\nimport { useConverterStates } from \"./utils/useConverterStates\"\r\n\r\nfunction App() {\r\n  const states = useConverterStates();\r\n  useFetchData(states);\r\n  const getBid = (currency = \"USD\") => states.currencyList.filter(cur => cur.code === currency)[0].bid;\r\n\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <div className=\"box\">\r\n        <Converter\r\n          states={states}\r\n          getBid={getBid}\r\n        />\r\n        <List savedList={states.savedList} setSavedList={states.setSavedList} />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nexport const useFetchData = (states) => {\r\n    const [dataReceived, setDataReceived] = useState(false);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        if (!dataReceived) {\r\n            console.log(\"Connecting to NBP\");\r\n            try {\r\n                const response = await fetch(\"https://api.nbp.pl/api/exchangerates/tables/C/?format=json\");\r\n                const jsonData = await response.json();\r\n                console.log(\"Response received\");\r\n                setDataReceived(true);\r\n                states.setCurrencyList(jsonData[0].rates);\r\n                states.setCurrency(jsonData[0].rates[0].code);\r\n                states.setRate(jsonData[0].rates[0].bid);\r\n                states.setValuePLN(Number(states.rate).toFixed(2));\r\n            } catch (error) {\r\n                console.log(\"Can't connect to NBP\");\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}